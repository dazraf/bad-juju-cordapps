buildscript {
    ext.corda_release_group = 'net.corda'
    ext.corda_release_version = '2.0.0'
    ext.corda_gradle_plugins_version = '1.0.0'
    ext.kotlin_version = '1.1.4'
    ext.junit_version = '4.12'
    ext.quasar_version = '0.7.6'
    ext.hamkrest_version = '1.4.2.2'
    ext.mockito_kotlin_version = '1.5.0'
    ext.braid_version = '1.0.12'
    ext.vertx_version = '3.4.2'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
    }
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'http://bluebank-nexus.uksouth.cloudapp.azure.com/repository/maven-public'}
    maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
}

apply plugin: 'kotlin'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

sourceSets {
    main {
        resources {
            srcDir "config/dev"
        }
    }
    test {
        resources {
            srcDir "config/test"
        }
    }
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/kotlin')
        }
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}


dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "junit:junit:$junit_version"
    testCompile "com.nhaarman:mockito-kotlin-kt1.1:$mockito_kotlin_version"

    // Corda integration dependencies
    cordaCompile "$corda_release_group:corda-core:$corda_release_version"
    cordaCompile "$corda_release_group:corda-finance:$corda_release_version"
    cordaCompile "$corda_release_group:corda-jackson:$corda_release_version"
    cordaCompile "$corda_release_group:corda-rpc:$corda_release_version"
    cordaCompile "$corda_release_group:corda-node-api:$corda_release_version"
    cordaCompile "$corda_release_group:corda-webserver-impl:$corda_release_version"
    cordaRuntime "$corda_release_group:corda:$corda_release_version"
    cordaRuntime "$corda_release_group:corda-webserver:$corda_release_version"

    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"

    // CorDapp dependencies
    // Specify your CorDapp's dependencies below, including dependent CorDapps.
    // We've defined Cash as a dependent CorDapp as an example.
    cordapp project(":cordite-commons")
    cordapp project(":dgl-cordapp")
    cordapp project(":dgl-contracts-states")
    cordapp project(":dao-cordapp")
    cordapp project(":dao-contracts-states")
    cordapp project(":metering-cordapp")
    cordapp project(":metering-contracts-states")
    cordapp project(":cordite-cordapp")
    cordapp "$corda_release_group:corda-finance:$corda_release_version"
}

task integrationTest(type: Test, dependsOn: []) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        languageVersion = "1.1"
        apiVersion = "1.1"
        jvmTarget = "1.8"
        javaParameters = true   // Useful for reflection.
    }
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: [
        ':cordite-commons:jar',
        ':dgl-contracts-states:jar',
        ':dgl-cordapp:jar',
        ':dao-contracts-states:jar',
        ':dao-cordapp:jar',
        ':metering-contracts-states:jar',
        ':metering-cordapp:jar',
        ':cordite-cordapp:jar']) {
    directory "./build/nodes"
    networkMap "O=MeteringNotary,L=London,C=GB"
    node {
        name "O=MeteringNotary,L=London,C=GB"
        advertisedServices = ["corda.notary.simple"]
        p2pPort 10002
        rpcPort 10003
        cordapps = [
                "$project.group:cordite-commons:$project.version",
                "$project.group:dgl-contracts-states:$project.version",
                "$project.group:dgl-cordapp:$project.version",
                "$project.group:dao-contracts-states:$project.version",
                "$project.group:dao-cordapp:$project.version",
                "$project.group:metering-contracts-states:$project.version",
                "$project.group:metering-cordapp:$project.version",
                "$project.group:cordite-cordapp:$project.version",
                "$corda_release_group:corda-finance:$corda_release_version"
        ]
    }
    node {
        name "O=Sector1Bank,L=London,C=GB"
        advertisedServices = []
        p2pPort 10005
        rpcPort 10006
        cordapps = [
                "$project.group:cordite-commons:$project.version",
                "$project.group:dgl-contracts-states:$project.version",
                "$project.group:dgl-cordapp:$project.version",
                "$project.group:dao-contracts-states:$project.version",
                "$project.group:dao-cordapp:$project.version",
                "$project.group:metering-contracts-states:$project.version",
                "$project.group:metering-cordapp:$project.version",
                "$project.group:cordite-cordapp:$project.version",
                "$corda_release_group:corda-finance:$corda_release_version"
        ]
        rpcUsers = [[user: "user1", "password": "test", "permissions": []]]
    }
    node {
        name "O=Sector2Bank,L=London,C=GB"
        advertisedServices = []
        p2pPort 10008
        rpcPort 10009
        cordapps = [
                "$project.group:cordite-commons:$project.version",
                "$project.group:dgl-contracts-states:$project.version",
                "$project.group:dgl-cordapp:$project.version",
                "$project.group:dao-contracts-states:$project.version",
                "$project.group:dao-cordapp:$project.version",
                "$project.group:metering-contracts-states:$project.version",
                "$project.group:metering-cordapp:$project.version",
                "$project.group:cordite-cordapp:$project.version",
                "$corda_release_group:corda-finance:$corda_release_version"
        ]
        rpcUsers = [[user: "user1", "password": "test", "permissions": []]]
    }
    node {
        name "O=MeteringPoliceNotary,L=London,C=GB"
        advertisedServices = ["corda.notary.simple"]
        p2pPort 10010
        rpcPort 10011
        cordapps = [
                "$project.group:cordite-commons:$project.version",
                "$project.group:dgl-contracts-states:$project.version",
                "$project.group:dgl-cordapp:$project.version",
                "$project.group:dao-contracts-states:$project.version",
                "$project.group:dao-cordapp:$project.version",
                "$project.group:metering-contracts-states:$project.version",
                "$project.group:metering-cordapp:$project.version",
                "$project.group:cordite-cordapp:$project.version",
                "$corda_release_group:corda-finance:$corda_release_version"
        ]
        rpcUsers = [[user: "user1", "password": "test", "permissions": []]]
    }
    node {
        name "O=Dao,L=London,C=GB"
        advertisedServices = []
        p2pPort 10012
        rpcPort 10013
        cordapps = [
                "$project.group:cordite-commons:$project.version",
                "$project.group:dgl-contracts-states:$project.version",
                "$project.group:dgl-cordapp:$project.version",
                "$project.group:dao-contracts-states:$project.version",
                "$project.group:dao-cordapp:$project.version",
                "$project.group:metering-contracts-states:$project.version",
                "$project.group:metering-cordapp:$project.version",
                "$project.group:cordite-cordapp:$project.version",
                "$corda_release_group:corda-finance:$corda_release_version"
        ]
        rpcUsers = [[user: "user1", "password": "test", "permissions": []]]
    }
}